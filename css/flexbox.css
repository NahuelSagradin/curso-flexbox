.headerPrincipal .container {
    display: flex; /*flex me permite colocar los elementos uno al lado del otro siempre que se utilice una etiqueta padre con dichos elementos en su interior*/
    align-items: center; /*hace que los elementos dentro del elemento padre que está con flex se alineen verticalmente, por lo tanto, para que ellos se alineen en el centro podemos utilizar 'align-items: center;' */
    justify-content: space-between; /*me permite generar un espacio entre los elementos, con esta clase los elementos se situan a los laterales generando un espacio en medio, caso contrario tendriamos todo ese espacio del lado derecho*/
}

.headerPrincipal-nav {
    display: flex;
}

/* FOOTER: LISTA-PATROCINADORES/FORMULARIO */

.rodapePrincipal-patrocinadores .container { /*En esta parte vamos a organizar nuestro footer, más precisamente seccion patrocinadores y formulario. En mi clase padre aplico el 'display: flex;' para ubicar mis elementos uno al lado del otro, con 'justify-content: space-between;' genero un espacio entre los elementos, siempre y cuando la caja que los contenga me lo permita*/
    display: flex;
    justify-content: space-between;
}

.rodapePrincipal-patrocinadores-list { /*Se utilizo una 'ul' para listar los patrocinadores, por tal motivo, cada item aparecera uno debajo del otro, para cambiar esta situacion podemos aplicar al contedor padre la propiedad 'display: flex;' para que ubique un 'item' al lado del otro, luego para que estos queden alineados al centro puedo utilizar la propiedad 'align-items: center;', ahora bien, por defecto los items quedaran muy juntos unos a otros, si utilizamos la propiedad 'justify-content: space-between;' observaremos en un principio que no mejoro nuestra situacion como en el caso del header, es más sigue todo igual, esto se debe a que el navegador a traves de dicha propiedad distrubuye el espacio sobrante entre los distintos elementos y en el caso de las 'ul', no hay que distribuir, a no ser que le indiquemos al contenedor padre (al flex) que este ocupa cierto porcentaje de la pantalla (su capacidad), esto lo conseguiremos gracias a la propiedad 'width', si observamos como va quedando nuestra pagina, vamos a notar que nuestra lista de patrocinadores representa aproximadamente un 75% del ancho del contenedor en el que se encuentra, valiendonos de esa apreciacion podemos aplicar ese valor a nuesto 'width'. Ahora bien, al aplicar estos cambios vamos a notar que nuestra 'ul' ahora quedo encimada a nuestro 'form', una posible solucion es darle un menor porcentaje al ancho de dicho (70%) contenedor y agregarle un margin-right de 5%*/
    display: flex;
    align-items: center;
    /*justify-content: space-between;*/
    /*si comparamos el resultado obtenido hasta ahora con nuestra imagen guia, los item de nuestra 'ul' tienen un espacio mayor en los laterales con respecto a sus respectivos margenes, para conseguir esto, solo tenemos que cambiar la propiedad 'espacio-entre' por la propiedad 'espacio-alrededor'*/
    justify-content: space-around;
    width: 70%;
    margin-right: 5%;
}

.rodapePrincipal-contatoForm { /*para que nuestros elementos queden distribuidos de una mejor manera es necesario darle el 25% restante de la pantalla a nuestro 'form'*/
    width: 25%;
}

.rodapePrincipal-contatoForm-fieldset {
    /*Para terminar con nuestro footer solo nos resta reacomodar los elementos de nuestro 'form', si comparamos nuestros resultados con la imagen guia vamos a notar que nuestra caja de texto se escuentra separada del boton enviar, para corregir esto y que quede uno al lado del otro simplemente basta con aplicar la propiedad 'display: flex;' al contenedor del 'form'.*/
    display: flex;
}

/* MAPA DE CURSOS */

/*Como primera medida tenemos que identificar las clases padre a la que queremos aplicar las propiedades para que los items internos tomen esa caracteristica. Si analizamos nuestro codigo en la seccion 'mapa-de-cursos' vamos a encontrarnos con 'links' que nos llevan directamente a cada uno de los cursos en cuestion, estos estan divididos por categorias. En un principio vamos a encontrar un elemento debajo de otro y nosotros queremos ubicarlos segun su correspondiente categoria en columnas de cursos.*/

.rodapePrincipal-navMap-list {
    /*como primer medida necesitamos que los elementos se ubiquen uno al lado del otro en lugar de uno debajo del otro, como ya lo hicimos antes, esto se consigue con la propiedad 'display: flex;'.*/
    display: flex;
    /*al aplicar esta propiedad los elementos se colocaran como esperabamos solo que tambien van a desbordar nuestra pantalla, ahora nosotros necesitamos separar los elementos (cursos) por columnas, por padron a los elementos se le aplica la propiedad 'flex-direction: row;', la cual los ubica uno al lado del otro, para cambiar esto y ubicarlos en forma de columna (uno debajo del otro) aplicamos la propiedad 'flex-direction: column;'*/
    flex-direction: column;
    /*ya los tenemos ubicados en forma de columna uno debajos de otro, ahora necesito darle una altura a dichas columanas para distribuir el contenido (en este caso en particular para que se ubiquen segun categorias) esto se consigue aplicando la propiedad 'height: 250px;'*/
    height: 260px;
    /*al aplicarle una altura a nuestras columnas notaremos que estas se desbordan de su area asignada en la pantalla, ademas de seguir una debajo de la otra, para modificar esto y que se coloque una columna al lado de otra es necesario indicarle que cuando llegue a una  'X' altura se quiebre y vaya para la columana siguiente, esto se consigue aplicando la propiedad; */
    flex-wrap: wrap;

}